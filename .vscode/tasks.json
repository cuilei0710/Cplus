{
    "tasks": [
        {
            "type": "process", // process是把预定义变量和转义解析后直接全部传给command；shell相当于先打开shell再输入命令，所以args还会经过shell再解析一遍
            "label": "C/C++: g++.exe build active file", // 任务名称，与launch.json的preLaunchTask相对应
            "command": "E:\\mingw64\\bin\\g++.exe", // 要使用的编译器，C++用g++
            "args": [
                "-g", // 生成和调试有关的信息
                // "${file}", // 单文件编译
                "${fileDirname}\\*.cpp", // 多文件编译
                // 注意多文件编译和单文件编译不能同时进行
                "-o", // 指定输出文件名，不加该参数则默认输出a.exe，Linux下默认a.out
                "${workspaceFolder}/EXE\\${fileBasenameNoExtension}.exe"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc" // 捕捉编译时终端里的报错信息到问题面板中，修改代码后需要重新编译才会再次触发
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always", // 执行任务时是否跳转到终端面板，可以为always，silent，never。具体参见VSC的文档
                "focus": false, // 设为true后可以使执行task时焦点聚集在终端，但对编译C/C++来说，设为true没有意义
                "panel": "shared", // 不同的文件的编译信息共享一个终端面板
                "showReuseMessage": true,
                "clear": false
            }
        }
    ],
    "version": "2.0.0"
}